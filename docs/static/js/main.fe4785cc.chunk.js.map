{"version":3,"sources":["cryptomonedas.png","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Error.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInitial","opciones","useState","state","setState","onChange","e","target","value","map","codigo","nombre","useCriptomoneda","CoinInfo","Id","FullName","Name","MensajeError","p","Error","message","Boton","input","Formulario","setMoneda","setCriptomoneda","listacripto","setListCripto","error","setError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","Axios","get","resultado","data","Data","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","SkChase","SkChaseDot","Spinner","Contenedor","Imagen","img","Heading","h1","App","setResultado","cargando","setCargando","url","DISPLAY","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe4785cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, { useState } from 'react';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst useMoneda = ( label, stateInitial, opciones ) => {\r\n\r\n    // State de nuestr Hook\r\n    const [ state, setState ] = useState( stateInitial );\r\n\r\n    const Seleccionar = () => (\r\n        <>\r\n            <Label>{ label }</Label>\r\n            \r\n            <Select\r\n                onChange={ e => setState( e.target.value ) }\r\n                value={ state }\r\n            >\r\n                <option value=\"\" >- Seleccione -</option>\r\n                {\r\n                    opciones.map( ({ codigo, nombre }) => (\r\n                        <option\r\n                            key={ codigo }\r\n                            value={ codigo } \r\n                        >\r\n                            { nombre }\r\n                        </option>\r\n                    ))\r\n                }\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n    return [ state, Seleccionar, setState ];\r\n};\r\n\r\nexport default useMoneda;","import React, { useState } from 'react';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst useCriptomoneda = ( label, stateInitial, opciones ) => {\r\n\r\n    // State de nuestr Hook\r\n    const [ state, setState ] = useState( stateInitial );\r\n\r\n    const SelectCripto = () => (\r\n        <>\r\n            <Label>{ label }</Label>\r\n            \r\n            <Select\r\n                onChange={ e => setState( e.target.value ) }\r\n                value={ state }\r\n            >\r\n                <option value=\"\" >- Seleccione -</option>\r\n                {\r\n                    opciones.map( ({ CoinInfo:{ Id, FullName ,Name } }) => (\r\n                        <option\r\n                            key={ Id }\r\n                            value={ Name } \r\n                        >\r\n                            { FullName }\r\n                        </option>\r\n                    ))\r\n                }\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n    return [ state, SelectCripto, setState ];\r\n};\r\n\r\nexport default useCriptomoneda;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst MensajeError = styled.p`\r\n    background-color: #b7322c;\r\n    padding: 1rem;\r\n    color: #FFF;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    font-family: 'Bebas Neue', cursive;\r\n`;\r\n\r\nconst Error = ({ message }) => {\r\n    return (\r\n        <MensajeError>\r\n            { message }\r\n        </MensajeError>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;","import React, { useState ,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled from '@emotion/styled';\r\nimport Axios from 'axios';\r\n\r\nimport useMoneda from '../hooks/useMoneda';\r\nimport useCriptomoneda from '../hooks/useCriptomoneda';\r\nimport Error from './Error';\r\n\r\nconst Boton = styled.input`\r\n    margin-top: 20px;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    background-color: #66a2fe;\r\n    border: none;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    transition: background-color .3s ease;\r\n\r\n    &:hover {\r\n        background-color: #326ac0;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Formulario = ({ setMoneda, setCriptomoneda }) => {\r\n\r\n    // State del listado de criptomonedas\r\n    const [ listacripto, setListCripto ] = useState( [] );\r\n    const [ error, setError ] = useState( false );\r\n\r\n    const MONEDAS = [\r\n        { codigo: 'USD', nombre: 'Dolar de Estados Unidos' },\r\n        { codigo: 'MXN', nombre: 'Peso Mexicano' },\r\n        { codigo: 'EUR', nombre: 'Euro' },\r\n        { codigo: 'GBP', nombre: 'Libra Esterlina' },\r\n        { codigo: 'PEN', nombre: 'Soles Peruano' }\r\n    ]\r\n\r\n    const [ moneda, SelectMonedas ] = useMoneda( 'Elige tu Moneda', '', MONEDAS );\r\n\r\n    const [ criptomoneda, SelectCripto ] = useCriptomoneda( 'Elige tu Criptomoneda', '', listacripto );\r\n\r\n    // Ejecutar llamado a la api\r\n    useEffect( () => {\r\n\r\n        ( async () => {\r\n\r\n            const url = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD`;\r\n\r\n            const resultado = await Axios.get( url );\r\n\r\n            setListCripto( resultado.data.Data );\r\n\r\n        } )();\r\n\r\n    }, [] );\r\n\r\n    // Cuando el usuario hace submit\r\n    const cotizarMoneda = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if( !moneda || !criptomoneda ) {\r\n            setError( true );\r\n            return;\r\n        }\r\n\r\n        setError( false );\r\n\r\n        // Guardar datos para realizar petición\r\n        setMoneda( moneda );\r\n        setCriptomoneda( criptomoneda );\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={ cotizarMoneda }\r\n        >\r\n\r\n            { error && <Error message='Todos los campos son obligatorios' /> }\r\n\r\n            <SelectMonedas />\r\n\r\n            <SelectCripto />\r\n\r\n            <Boton \r\n                type='submit'\r\n                value='Calcular'\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nFormulario.propTypes = {\r\n    setMoneda: PropTypes.func.isRequired,\r\n    setCriptomoneda: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst ResultadoDiv = styled.div`\r\n    color: #FFF;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n    font-size: 18px;\r\n\r\n    span {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Precio = styled.p`\r\n    font-size: 30px;\r\n\r\n    span {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Cotizacion = ({ resultado }) => {\r\n\r\n    if( Object.keys( resultado ).length === 0 ) return null;\r\n\r\n    const { PRICE, HIGHDAY, LOWDAY, CHANGEPCT24HOUR, LASTUPDATE } = resultado;\r\n    \r\n    return (\r\n        <ResultadoDiv>\r\n            <Precio>El precio es: <span>{ PRICE }</span></Precio>\r\n            <Info>El precio más alto del día: <span>{ HIGHDAY }</span></Info>\r\n            <Info>El precio más bajo del día: <span>{ LOWDAY }</span></Info>\r\n            <Info>Variación últimas 24 horas: <span>{ CHANGEPCT24HOUR }</span></Info>\r\n            <Info>Última actualización: <span>{ LASTUPDATE }</span></Info>\r\n        </ResultadoDiv>\r\n    );\r\n};\r\n\r\nCotizacion.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Cotizacion;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst SkChase = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    position: relative;\r\n    animation: sk-chase 2.5s infinite linear both;\r\n    margin: 50px auto 50px auto;\r\n\r\n    @keyframes sk-chase {\r\n        100% { transform: rotate(360deg); } \r\n    }\r\n`;\r\n\r\nconst SkChaseDot = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    animation: sk-chase-dot 2.0s infinite ease-in-out both; \r\n\r\n    @keyframes sk-chase-dot {\r\n        80%, 100% { transform: rotate(360deg); } \r\n    }\r\n\r\n    &::before {\r\n        content: '';\r\n        display: block;\r\n        width: 25%;\r\n        height: 25%;\r\n        background-color: #fff;\r\n        border-radius: 100%;\r\n        animation: sk-chase-dot-before 2.0s infinite ease-in-out both;\r\n\r\n        @keyframes sk-chase-dot-before {\r\n            50% {\r\n              transform: scale(0.4); \r\n            } 100%, 0% {\r\n              transform: scale(1.0); \r\n            } \r\n        }\r\n    }\r\n\r\n    &:nth-of-type(1) {\r\n        animation-delay: -1.1s;\r\n        &:before { animation-delay: -1.1s; }\r\n    }\r\n\r\n    &:nth-of-type(2) { \r\n        animation-delay: -1.0s;\r\n        &:before { animation-delay: -1.0s; }\r\n    }\r\n\r\n    &:nth-of-type(3) {\r\n        animation-delay: -0.9s;\r\n        &:before { animation-delay: -0.9s; }\r\n    }\r\n    \r\n    &:nth-of-type(4) { \r\n        animation-delay: -0.8s; \r\n        &:before { animation-delay: -0.8s; }\r\n    }\r\n\r\n    &:nth-of-type(5) { \r\n        animation-delay: -0.7s;\r\n        &:before { animation-delay: -0.7s; }\r\n    }\r\n\r\n    &:nth-of-type(6) { \r\n        animation-delay: -0.6s;\r\n        &:before { animation-delay: -0.6s; }\r\n    }\r\n`;\r\n\r\nconst Spinner = () => (\r\n    <SkChase>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n    </SkChase>\r\n);\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\n\nimport styled from '@emotion/styled';\nimport Axios from 'axios';\n\nimport imagen from './cryptomonedas.png';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner';\n\nconst Contenedor = styled.div`\n\tmax-width: 900px;\n\tmargin: 0 auto;\n\t@media ( min-width: 920px ) {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat( 2, 1fr );\n\t\tgrid-column-gap: 2rem; \n\t}\n`;\n\nconst Imagen = styled.img`\n\tmax-width: 100%;\n\tmargin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n\tfont-family: 'Bebas Neue', cursive;\n\tcolor: #FFF;\n\ttext-align: left;\n\tfont-weight: 700;\n\tfont-size: 50px;\n\tmargin-bottom: 50px;\n\tmargin-top: 80px;\n\n\t&::after {\n\t\tcontent: '';\n\t\twidth: 100px;\n\t\theight: 6px;\n\t\tbackground-color: #66a2fe;\n\t\tdisplay: block;\n\t}\n`;\n\nfunction App() {\n\n\tconst [ moneda, setMoneda ] = useState( '' );\n\tconst [ criptomoneda, setCriptomoneda ] = useState( '' );\n\tconst [ resultado, setResultado ] = useState( {} );\n\tconst [ cargando, setCargando ] = useState( false );\n\n\tuseEffect( () => {\n\n\t\tif( !moneda || !criptomoneda ) return;\n\t\t\n\t\tsetCargando( true );\n\n\t\t( async () => {\n\n\t\t\tconst url \t\t= `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${ criptomoneda }&tsyms=${ moneda }`;\n\t\t\tconst { data }\t= await Axios.get( url );\n\n\t\t\tsetCargando( false );\n\t\t\t\n\t\t\tsetResultado( data.DISPLAY[ criptomoneda ][ moneda ] );\n\n\t\t} )();\n\n\t}, [ moneda, criptomoneda ] );\n\n\tconst componente = cargando ? <Spinner /> : <Cotizacion resultado={ resultado } />\n\n\treturn (\n\t\t<Contenedor>\n\t\t\t<div>\n\t\t\t\t<Imagen \n\t\t\t\t\tsrc={ imagen } \n\t\t\t\t\talt='Imagen Crypto' \n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<Heading>\n\t\t\t\t\tCotiza Criptomonedas al Instante\n\t\t\t\t</Heading>\n\t\t\t\t\n\t\t\t\t<Formulario \n\t\t\t\t\tsetMoneda={ setMoneda }\n\t\t\t\t\tsetCriptomoneda={ setCriptomoneda }\n\t\t\t\t/>\n\n\t\t\t\t{ componente }\n\t\t\t</div>\n\t\t</Contenedor>\n\t);\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}